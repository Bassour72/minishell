makefile ---> Makefile
clean Makefile


dont expand some variables



echo $one or echo $physical_PWD  echo just print new line


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
norminette
make errors at fd 2
rm the split from tokenizer expand
^^^^doing^^^^
ambiguous when only space in variable
herdoc expander
wc perm denied
sytax_error

echo *.*

l7wya dyal Omar ----------> white spaces ls \tb\tb\tb -la

wildcard problem enforcemanet


declare -x a="x y z"
minishell$ export b=$a
export: `z"': not a valid identifier

export: `b%b=ls -la': not a valid identifier

minishell$ export l=""$a b%b="$a"
(export)[6]
(l=ls)[4]
(-la)[3]
(b%b=ls -la)[10]
------------------------------------------------------------------------------------
export: `-la': not a valid identifier

export: `b%b=ls -la': not a valid identifier

minishell$ export l=""$a b%b="$a"



export += 

export a=$b$b



minishell$ $ldgksmkdhhdshdhdsdjdjs
[1]    91456 segmentation fault  ./minishell



export a=" ls -la "
minishell$ $a
ls: : No such file or directory




minishell$ export a="b c"
declare -x a



========================================
export a++s
export: `a++s': not a valid identifier

minishell$ echo $?
0

bash-3.2$ export a+sa+
bash: export: `a+sa+': not a valid identifier
bash-3.2$ echo $?
1
=========================================




bash not should print ^c but in imac not linux
minishell$ ^C
minishell$ ^C
minishell$ ^C
minishell$ ^C




exit status in imac is 258
minishell$ "
syntax error near unexpected token `"
minishell$ echo $?
0



whene use ctrol + c in herdoc wxit status is 1 not 130
minishell$ << a << b << c
> ^C
here 1000000000000000000000000
minishell$ echo $?
130



whene use ctrol + c in herdoc exit status is 0 not 139
minishell$ << a
> 
minishell: warning: here-document delimited by end-of-file (wanted `a')
Error: Empty command node
: Invalid argument
minishell: minishell$ echo $?
139




minishell$ djsjdsjdsjdjs
minishell: djsjdsjdsjdjs: Command not found: 
minishell$ exit
exit
exit function 

➜  minishell git:(parsing) ✗ echo $?
0

bash-3.2$ hdsdsjdsjdjs
bash: hdsdsjdsjdjs: command not found
bash-3.2$ exit
exit
➜  minishell git:(parsing) ✗ echo $?
127





bash-3.2$ << 1 << 2 << 3 << 4 << 5 << 6 << 7 << 8 << 9 << 10 << 11 << 12 << 13 << 14 << 15 | << 16 << 17
bash: maximum here-document count exceeded
➜  minishell git:(parsing) ✗ echo $?
2



this is valid
 export p+=skaksaks
export: `p+=skaksaks': not a valid identifier



if zz have spaces or tabs in his valuse you will dont do nothing it is not a permission denied or Command not found
minishell$ export zz="    "
minishell$ $zz
execve: Permission denied




minishell$ ""
execve: Permission denied
bash-3.2$ ""
bash: : command not found




minishell$ touch s.sh
minishell$ ./s
s.sh                   skaks askask akskaska  split2.c               
minishell$ ./s.sh 
minishell: ./s.sh: Command not found: 
minishell$ chmod +x s.sh 
minishell$ ./s.sh 
execve: Exec format error
minishell$ bin/bash bash/s.sh
minishell: bin/bash: Command not found: 
minishell$ bin/bash bash/s.sh



minishell$ touch ls
minishell$ export PATH=.
minishell$ ls
minishell: ls: Command not found: 

bash-3.2$ touch ls
bash-3.2$ export PATH=.
bash-3.2$ ls
bash: ./ls: Permission denied




minishell$ unset PATH
minishell$ ls
minishell: ls: Command not found: 

bash-3.2$ unset PATH
bash-3.2$ ls
bash: ls: Permission denied





















minishell$ export PATH=.
minishell$ minishell
minishell: minishell: Command not found: 

bash-3.2$ export PATH=.
bash-3.2$ minishell







minishell$ export HOME=
minishell$ dc
cd: no such file or directory: 

bash-3.2$ export HOME=
bash-3.2$ cd
bash-3.2$ 










minishell$ unset PATH
minishell$ /bin/ls
minishell: /bin/ls: Command not found: 

bash-3.2$ unset PATH
bash-3.2$ /bin/ls 
       ayoub                    env                             parsing
    skaks askask akskaska       execution                       skaks askask akskaska
README.md                       include                         split2.c
_libft                          ls                              test_comd.txt
a                               makefile                        todo
askkassa kkaks kaksksa          minishell                       uler
b                               minishell.c                     wildcard
c                               minishell.o                     younes.txt
debug                           norm






minishell$ mkdir -p 1/2/3
minishell$  cd 1/2/3/
minishell$ rm -rf ../../../1/
minishell$ pwd
error: : No such file or directory

bash-3.2$ mkdir -p 1/2/3
bash-3.2$ cd 1/2/3/
bash-3.2$ rm -rf ../../../1/
bash-3.2$ pwd
/mnt/homes/massrayb/Desktop/minishell/1/2/3






minishell$ mkdir -p 1/2/3
minishell$  cd 1/2/3/
minishell$ rm -rf ../../../1/
minishell$ cd ..
error: : No such file or directory

bash-3.2$ mkdir -p 1/2/3
bash-3.2$ cd 1/2/3/
bash-3.2$ rm -rf ../../../1/
bash-3.2$ cd ..
cd: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
bash-3.2$ cd ..
bash-3.2$ 






minishell$ mkdir hellllllo
minishell$ cd hellllllo/
bash-3.2$ chmod 0 hellllllo/
minishell$ cd ..
error: : Permission denied

bash-3.2$ cd hellllllo/
minishell$ chmod 0 hellllllo/
bash-3.2$ cd ..
bash-3.2$ 






minishell$ <  $hh cat | cat -e
redirection open failed: No such file or directory

bash-3.2$  < $hh cat | cat -e
bash: $hh: ambiguous redirect




















minishell$ echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l |  echo sfdsf >> l | dsf >> l |  echo
syntax error near unexpected token `|'
Segmentation fault (core dumped)


















=======
-----------------------------------------
bash-3.2$ exit 5  3 > l
exit
bash: exit: too many arguments
-----------------------------------------
bash-3.2$ export p+
bash: export: `p+': not a valid identifier
------------------------------------- ----
export PATH+=:.

bash-3.2$ minishell
minishell$ exit
bash-3.2$
-----------------------------------------
minishell$ 
minishell$ exit
[1]    48490 abort      env -i ./minishell
➜  minishell git:(main) ✗ env -i ./minishell
minishell$ ls
L                       env                     l2                      massrayb                minishell.o             test_comd.txt
README.md               execution               l3                      massraybayoub           out.txt                 todo
_libft                  file'aka                l4                      massraybayoubmassrayb   parsing                 wildcard
ayoub                   include                 log.txt                 minishell               s.sh                    younes.txt
debug                   l1                      makefile                minishell.c             split2.c
minishell$ exit
➜  minishell git:(main) ✗ env -i ./minishell
minishell$ exit
exit
AddressSanitizer:DEADLYSIGNAL
=================================================================
==48571==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010da06467 bp 0x7ffee22298b0 sp 0x7ffee2229840 T0)
==48571==The signal is caused by a READ memory access.
==48571==Hint: address points to the zero page.
    #0 0x10da06467 in handle_white_spaces+0x67 (/mnt/homes/massrayb/Desktop/minishell/./minishell:x86_64+0x100030467)
    #1 0x10da062ee in ft_atoi+0x13e (/mnt/homes/massrayb/Desktop/minishell/./minishell:x86_64+0x1000302ee)
    #2 0x10d9faea2 in exit_exe+0x1b2 (/mnt/homes/massrayb/Desktop/minishell/./minishell:x86_64+0x100024ea2)
    #3 0x10da01533 in execute_builtin+0x343 (/mnt/homes/massrayb/Desktop/minishell/./minishell:x86_64+0x10002b533)
    #4 0x10da0506b in exec_builtin_command+0xab (/mnt/homes/massrayb/Desktop/minishell/./minishell:x86_64+0x10002f06b)
    #5 0x10da04dd4 in exec_block_command+0x244 (/mnt/homes/massrayb/Desktop/minishell/./minishell:x86_64+0x10002edd4)
    #6 0x10da04665 in exec_tree+0x1a5 (/mnt/homes/massrayb/Desktop/minishell/./minishell:x86_64+0x10002e665)
    #7 0x10d9f9166 in execution+0x1b6 (/mnt/homes/massrayb/Desktop/minishell/./minishell:x86_64+0x100023166)
    #8 0x10d9d8501 in main+0x441 (/mnt/homes/massrayb/Desktop/minishell/./minishell:x86_64+0x100002501)
    #9 0x7fff6bed5cc8 in start+0x0 (/usr/lib/system/libdyld.dylib:x86_64+0x1acc8)

==48571==Register values:
rax = 0x0000000000000000  rbx = 0x00007ffee2229900  rcx = 0x0000100000000000  rdx = 0x0000100000000000  
rdi = 0x0000000000000000  rsi = 0x0000000000000000  rbp = 0x00007ffee22298b0  rsp = 0x00007ffee2229840  
 r8 = 0x0000000000000004   r9 = 0x0000000000000000  r10 = 0x00001c0c00000225  r11 = 0x0000000000000206  
r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x0000000000000000  r15 = 0x0000000000000000  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV (/mnt/homes/massrayb/Desktop/minishell/./minishell:x86_64+0x100030467) in handle_white_spaces+0x67
==48571==ABORTING
[1]    48571 abort      env -i ./minishell
-----------------------------------------
bash-3.2$ ./makefile
bash: ./makefile: Permission denied
bash-3.2$ $?
bash: 126: command not found
bash-3.2$ ./makefile/
bash: ./makefile/: Not a directory
bash-3.2$ $?
bash: 126: command not found
bash-3.2$ ..
bash: ..: command not found
bash-3.2$ unset PATH
bash-3.2$ ..
bash: ..: is a directory
bash-3.2$ .
bash: .: filename argument required
.: usage: . filename [arguments]
bash-3.2$ ..
bash: ..: is a directory
-----------------------------------------
minishell$ export
declare -x OLDPWD
declare -x PWD="/home/ybassour/Desktop/minishell"
declare -x SHLVL="1"
minishell$ export o=
minishell$ export   
declare -x OLDPWD
declare -x PWD="/home/ybassour/Desktop/minishell"
declare -x SHLVL="1"
declare -x o=""
-----------------------------------------
minishell$ mkdir -p 1/2/3
minishell$ cd 1/2/3/
minishell$ pwd
/mnt/homes/massrayb/Desktop/minishell/1/2/3
minishell$ rm -rf /mnt/homes/massrayb/Desktop/minishell/1
minishell$ pwd
error: : No such file or directory
minishell$ cd ..
error: : No such file or directory
-----------------------------------------
minishell$ mkdir p
minishell$ cd p
minishell$ chmod 0 .
minishell$ pwd
error: : Permission denied
minishell$ cd ..
error: : Permission denied
minishell$ pwd 
error: : Permission denied
-----------------------------------------
ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls 

-----------------------------------------
top
should restore terminal always
-----------------------------------------
bash-3.2$ export a="      " space
bash-3.2$ $a
bash-3.2$ export b="    " tab
bash-3.2$ $b
bash-3.2$ ls$a-l$b-a
-----------------------------------------
bash-3.2$ a="      "
bash-3.2$ > $a
bash: $a: ambiguous redirect
-----------------------------------------
env -i ./minishell
minishell$ $?
minishell: 127: command not found
-----------------------------------------


ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls 

<<<<<<< HEAD






static t_tree *collect_parenths(t_flat_tree	*ft)
{
	t_flat_tree	*left;
	t_flat_tree	*flat;

	flat = flat_tree_last(ft);
	if (flat->tree_node->empty == -1)
	{
		flat->prev->next = NULL;
		while (flat->prev)
			flat = flat->prev;
		flat->next->prev = NULL;
		left = flat->next;
		flat->tree_node->left = init_tree(left);
		return (flat->tree_node);
	}
	return (NULL);
}

static t_tree	*collect_pipe(t_flat_tree *ft)
{
	t_flat_tree	*left;
	t_flat_tree	*flat;
	t_flat_tree	*right;
	int			p;
	
	flat =  flat_tree_last(ft);
	while (flat->prev)
	{
		if (flat->tree_node->empty == -1)
			p++;
		else if (flat->tree_node->empty == 1)
			p--;
			
		else if (p == 0 && flat->tree_node->type == PIPE)
		{
			right = flat->next;
			left = flat->prev;
			flat->next->prev = NULL;
			flat->prev->next = NULL;
			flat->next = NULL;
			flat->prev = NULL;
			flat->tree_node->right = init_tree(right);
			flat->tree_node->left = init_tree(left);
			return (flat->tree_node);
		}
		flat = flat->prev;
	}
	return (NULL);
}

static t_tree	*collect_operator(t_flat_tree *ft)
{
	t_flat_tree	*left;
	t_flat_tree	*flat;
	t_flat_tree	*right;
	int			p;

	flat =  flat_tree_last(ft);
	while (flat->prev)
	{
		if (flat->tree_node->empty == -1)
			p++;
		else if (flat->tree_node->empty == 1)
			p--;
		else if (p == 0 && (flat->tree_node->type == OP_OR || flat->tree_node->type == OP_AND))
		{
			right = flat->next;
			left = flat->prev;
			flat->next->prev = NULL;
			flat->prev->next = NULL;
			flat->next = NULL;
			flat->prev = NULL;
			flat->tree_node->right = init_tree(right);
			flat->tree_node->left = init_tree(left);
			return (flat->tree_node);
		}
		flat = flat->prev;
	}
	return (NULL);
}

t_tree	*init_tree(t_flat_tree *ft)
{
	t_tree	*tree_node;

	tree_node = collect_operator(ft);
	if (tree_node)
		return (tree_node);
	tree_node = collect_pipe(ft);
	if (tree_node)
		return (tree_node);
	tree_node = collect_parenths(ft);
	if (tree_node)
		return (tree_node);
	return (ft->tree_node);
}

=======
export a="        "
minishell$ export b="           "
minishell$ $a
minishell: : command not found
minishell$ $b                    
minishell: : command not found
minishell$ ls$a-l$b-a           
>>>>>>> 6aa338f458354facf070f536b0a81ac1b3e9fb7b
